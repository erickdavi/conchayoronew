---
name: conchayoro-pipeline
on:
  push:
    branches:
      - main
  workflow_dispatch: null
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  PROJECT_NAME: ${{ vars.PROJECT_NAME }}
  MODULE_NAME: ${{ vars.MODULE_NAME }}
  TAG: latest
  STACK_NAME: 64bit Amazon Linux 2 v3.5.7 running Docker
jobs:
  create-repo:
    runs-on: ubuntu-latest
    steps:
      - run: aws ecr create-repository --repository-name ${{ vars.PROJECT_NAME }}/${{ vars.MODULE_NAME }} --image-scanning-configuration scanOnPush=true --region ${{ vars.AWS_REGION }} && echo "Success" && echo 0; echo "${{ vars.PROJECT_NAME }} already exist"
  create-infra:
    runs-on: ubuntu-latest
    steps:
      - run: aws elasticbeanstalk create-application --application-name ${{ vars.PROJECT_NAME }} && echo "created" && exit 0 ; echo "already created"
      - run: aws elasticbeanstalk create-environment --application-name ${{ vars.PROJECT_NAME }} --environment-name ${{ vars.MODULE_NAME }} --solution-stack-name "64bit Amazon Linux 2 v3.5.7 running Docker" && echo "${{ vars.PROJECT_NAME }} created" && exit 0; echo "${{ vars.PROJECT_NAME }} already created" && exit
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: npm
      - run: docker build -t conchayoronew/backend-env:latest .
      - run: docker tag $PROJECT_NAME/$MODULE_NAME:$TAG
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$PROJECT_NAME/$MODULE_NAME:$TAG
      - run: aws ecr get-login-password --region $AWS_REGION | docker login --username
          AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - run: docker push
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$PROJECT_NAME/$MODULE_NAME:$TAG
      - uses: actions/upload-artifact@v3
        with:
          name: ebconfig
          path: |
            backend/ .elastickbeanstalk/config.yml
            backend/Dockerrun.aws.json
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ebconfig
          path: null
      - run: |
          sed -i='' "s/<AWS_ACCOUNT_ID>/$AWS_ACCOUNT_ID/" Dockerrun.aws.json
          sed -i='' "s/<PROJECT_NAME>/$PROJECT_NAME/" Dockerrun.aws.json
          sed -i='' "s/<MODULE_NAME>/$MODULE_NAME/" Dockerrun.aws.json
          sed -i='' "s/<TAG>/$TAG/" Dockerrun.aws.json
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: |
          python -m pip install --upgrade pip
          pip install awsebcli
      - run: |
          eb init <<EOF
          1
          1
          2
          Y
          2
          N
          EOF
          eb deploy ${{ vars.MODULE_NAME }}
